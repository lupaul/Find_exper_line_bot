


    <div id="textchat">
         <p id="history"></p>
         <form>
              <input type="text" placeholder="Input your text here" id="msgTxt"></input>
         </form>
    </div>




<script type="text/javascript">


	var apiKey = "46066312"
	// use same session_id and token that we have generated above.
	var sessionId = "<%= @room.sessionId %>"
	var token = "<%= @tok_token %>"
	// var session = OT.initSession(apiKey, sessionID);
  var session = OT.initSession(apiKey, sessionId);

  // Subscribe to a newly created stream
  // session.on('streamCreated', function streamCreated(event) {
  //   var subscriberOptions = {
  //     insertMode: 'append',
  //     width: '100%',
  //     height: '100%'
  //   };
  //   session.subscribe(event.stream, 'subscriber', subscriberOptions, function callback(error) {
  //     if (error) {
  //       console.error('There was an error publishing: ', error.name, error.message);
  //     }
  //   });
  // });

  session.on('sessionDisconnected', function sessionDisconnected(event) {
    console.error('You were disconnected from the session.', event.reason);
  });

  // Connect to the session
  session.connect(token, function callback(error) {
    // If the connection is successful, initialize a publisher and publish to the session
    if (!error) {
      // var publisherOptions = {
      //   insertMode: 'append',
      //   width: '100%',
      //   height: '100%'
      // };
      var publisher = OT.initPublisher('publisher', publisherOptions, function initCallback(initErr) {
        if (initErr) {
          console.error('There was an error initializing the publisher: ', initErr.name, initErr.message);
          return;
        }
        session.publish(publisher, function publishCallback(publishErr) {
          if (publishErr) {
            console.error('There was an error publishing: ', publishErr.name, publishErr.message);
          }
        });
      });
    } else {
      console.error('There was an error connecting to the session: ', error.name, error.message);
    }
  });

  // Receive a message and append it to the history
  var msgHistory = document.querySelector('#history');
  session.on('signal:msg', function signalCallback(event) {
    var msg = document.createElement('p');
    msg.textContent = event.data;
		console.log("event:" ,event)
		console.log("event_data:" ,event.data)
		// console.log("connection_id:",event.from.connectionId)
    // msg.className = event.from.connectionId === session.connection.connectionId ? 'mine' : 'theirs';
		msg.className = "theirs";
		console.log("log:",msg.className)
    msgHistory.appendChild(msg);
		console.log("message:",msg)
    msg.scrollIntoView();
  });


// Text chat
var form = document.querySelector('form');
var msgTxt = document.querySelector('#msgTxt');

// Send a signal once the user enters data in the form
form.addEventListener('submit', function submit(event) {
  event.preventDefault();
	$.ajax({
		url:"/api/v1/chat",
		method: "POST",
		data: {
			id: session.id,
			type: 'msg',
			data: msgTxt.value
		}
	})
  // session.signal({
  //   type: 'msg',
  //   data: msgTxt.value
  // }, function signalCallback(error) {
  //   if (error) {
  //     console.error('Error sending signal:', error.name, error.message);
  //   } else {
  //     msgTxt.value = '';
  //   }
  // });
});

// See the config.js file.


</script>
